import{r as e,o,c,a as s,b as p,F as l,e as t,d as n}from"./app.25546b90.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=t('<h1 id="context\u72B6\u6001\u7BA1\u7406\u6309\u9700\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#context\u72B6\u6001\u7BA1\u7406\u6309\u9700\u66F4\u65B0" aria-hidden="true">#</a> Context\u72B6\u6001\u7BA1\u7406\u6309\u9700\u66F4\u65B0</h1><h2 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h2><p>\u5F53\u7EC4\u4EF6\u4E0A\u5C42\u6700\u8FD1\u7684 <code>&lt;Context.Provider&gt;</code>\u7684<code>value</code>\u66F4\u65B0\u65F6\uFF0C\u4F7F\u7528<code>useContext</code>\u6D88\u8D39\u8BE5<code>context</code>\u7684<code>consumer</code>\u7EC4\u4EF6\u4F1A\u89E6\u53D1<code>rerender</code>, \u5373\u4F7F\u7956\u5148\u4F7F\u7528 <code>memo</code> \u6216 <code>shouldComponentUpdate</code>\u5305\u88F9, \u4E5F\u4F1A\u5728\u7EC4\u4EF6\u672C\u8EAB\u4F7F\u7528 useContext \u65F6\u91CD\u65B0\u6E32\u67D3\u3002</p><p>\u90A3\u7C7B\u4F3C\u4E8E<code>redux</code>\u8FD9\u79CD\u4F7F\u7528<code>context</code>\u7684\u72B6\u6001\u7BA1\u7406\u5E93\uFF0C\u4E0D\u5C31\u4F1A\u5B58\u5728A\u7EC4\u4EF6\u4F9D\u8D56<code>context.a</code>, \u5374\u51FA\u73B0<code>context.b</code>\u66F4\u65B0, \u5BFC\u81F4A\u7EC4\u4EF6<code>rerender</code>\u4E48\uFF0C\u90A3\u5B9E\u9645<code>redux</code>\u80AF\u5B9A\u4E5F\u4E0D\u4F1A\u90A3\u4E48\u8822, \u662F\u6309\u9700\u66F4\u65B0\u7684\uFF0C\u90A3\u5B83\u53C8\u662F\u600E\u4E48\u5750\u5230\u7684</p>',4),i=n("\u53BB\u5E74\u8DF3\u69FD\u7684\u65F6\u5019\u6709\u88AB\u95EE\u5230\uFF0C\u4F46\u6CA1\u7EC6\u60F3\uFF0C\u76F4\u5230\u524D\u51E0\u5929\u770B\u5230\u4E86\u4E0B\u9762"),b={href:"https://mp.weixin.qq.com/s/TmFLzD_nye0_dDTiZB1P3A",target:"_blank",rel:"noopener noreferrer"},d=n("\u8FD9\u7BC7\u6587\u7AE0"),m=n("\uFF0C\u5BF9\u5E94"),f={href:"https://github.com/MinJieLiu/heo",target:"_blank",rel:"noopener noreferrer"},g=n("github"),y=t(`<h2 id="\u539F\u7406\u5256\u6790" tabindex="-1"><a class="header-anchor" href="#\u539F\u7406\u5256\u6790" aria-hidden="true">#</a> \u539F\u7406\u5256\u6790</h2><p>\u6700\u4E3B\u8981\u7684\u505A\u6CD5\u662F\u662F\u8981\u4FDD\u6301<code>context</code>\u4E2D\u7684<code>value</code>\u4E0D\u53D8\uFF08\u4F7F\u7528<code>useRef</code>\u5305\u88F9\uFF09\uFF0C\u4F7F\u5176\u4E0D\u53EF\u53D8\uFF0C\u4F46\u540C\u65F6\u5C31\u5931\u53BB\u4E86\u81EA\u52A8\u66F4\u65B0\u673A\u5236\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5229\u7528<code>consumer</code>\u5B50\u7EC4\u4EF6\u7684<code>forceUpdate</code>(<code>const [, forceUpdate] = React.useReducer((c) =&gt; c + 1, 0)</code>)\u6765\u89E6\u53D1\u66F4\u65B0\u3002</p><p>\u5177\u4F53\u505A\u6CD5\uFF1A\u5728\u5B50\u7EC4\u4EF6<code>mount</code>\u65F6\u6DFB\u52A0\u4E00\u4E2A<code>listener</code>\u5230<code>Context</code>\u4E2D\uFF0C<code>unMount</code>\u65F6\u5C06\u5176\u79FB\u9664, <code>Context</code>\u6709\u66F4\u65B0\u65F6\uFF0C \u8C03\u7528\u8FD9\u4E2A<code>listener</code>\uFF0C\u5224\u65AD\u662F\u5426\u9700\u8981\u66F4\u65B0\uFF0C\u5982\u679C\u9700\u8981\uFF0C\u8C03\u7528 <code>forceUpdate</code>\u6765\u89E6\u53D1<code>rerender</code>\u3002</p><h2 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h2><p>provider\u7EC4\u4EF6\u6BCF\u6B21value\u53D8\u66F4\u65F6(<code>useHook</code>)\uFF0C\u89E6\u53D1<code>Provider</code>\u7EC4\u4EF6\u7684 <code>rerender</code>, <code>listeners</code>\u904D\u5386\u6267\u884C, \u5B50\u7EC4\u4EF6\u56E0\u4E3A<code>memo</code>\u5E76\u4E14<code>Context</code>\u7684<code>value</code>\u6CA1\u6709\u53D8\u66F4\uFF0C\u4E0D\u4F1A<code>rerender</code></p><p>\u7B80\u5316\u7248\u7684\u4EE3\u7801\u5982\u4E0B</p><blockquote><p>useHook demo, \u8FD4\u56DE\u4E00\u4E9B\u9700\u8981\u914D\u7F6E\u5728Context value\u91CC\u7684\u503C\uFF0C\u6BD4\u5982count1\u3001setCount1\u3001count2\u3001setCount2</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">useHook</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count1<span class="token punctuation">,</span> setCount1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count2<span class="token punctuation">,</span> setCount2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    count1<span class="token punctuation">,</span>
    setCount1<span class="token punctuation">,</span>
    count2<span class="token punctuation">,</span>
    setCount2
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>Context\u4E2D\u4FDD\u6301value\u4E0D\u53D8\uFF0C\u5728\u5B50\u5B59\u7EC4\u4EF6\u8C03\u7528setCount1\u65F6\uFF0CProvider\u7EC4\u4EF6\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u4F46\u662FkeepValue\u662F\u4E0D\u53D8\u7684\uFF0C\u6211\u4EEC\u4F7F\u7528keepValue.listeners\u904D\u5386\u53BB\u6267\u884C\u5B50\u5B59\u7EC4\u4EF6\u7ED1\u5B9A\u7684listener</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createContext<span class="token punctuation">,</span> memo<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token parameter">useHook</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> Context <span class="token operator">=</span> <span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> Provider <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">useHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> keepValue <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> <span class="token literal-property property">listeners</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>current<span class="token punctuation">;</span>
    keepValue<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>

    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      keepValue<span class="token punctuation">.</span>listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">listener</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">listener</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Context<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>keepValue<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Context<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5728consumer\u7EC4\u4EF6\u6CE8\u518CuseSelector\uFF0C \u6839\u636Eselector\u6620\u5C04context\u6240\u9700\u5B57\u6BB5\uFF08<code>selected</code>), \u6CE8\u518Clistener\uFF08callback\u4E2D\u5C06\u5F53\u524D<code>selected</code>\u4E0E<code>nextSelected</code>\u505A\u6BD4\u8F83\uFF0C\u82E5\u4E0D\u4E00\u81F4\u6267\u884C<code>forceUpdate</code>\u6765\u66F4\u65B0\u7EC4\u4EF6\uFF09,\u4EE5\u6B64\u6765\u5B9E\u73B0\u6309\u9700\u66F4\u65B0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SelectorFn<span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> Selected<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> Value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Selected<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useSelector</span><span class="token generic class-name"><span class="token operator">&lt;</span>Selected<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>selector<span class="token operator">:</span> SelectorFn<span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> Selected<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Selected <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> forceUpdate<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useReducer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> listeners <span class="token punctuation">}</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>Context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> selected <span class="token operator">=</span> <span class="token function">selector</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> storeValue <span class="token operator">=</span> <span class="token punctuation">{</span>
      selector<span class="token punctuation">,</span>
      value<span class="token punctuation">,</span>
      selected<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span>storeValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">callback</span><span class="token punctuation">(</span>nextValue<span class="token operator">:</span> Value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ref<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">const</span> refValue <span class="token operator">=</span> ref<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
          <span class="token comment">// \u5C06context\u7684value\u524D\u540E\u503C\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u4E00\u6837\u5219\u4E0D\u89E6\u53D1 render</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>refValue<span class="token punctuation">.</span>value <span class="token operator">===</span> nextValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
           <span class="token comment">// \u5C06\u7EC4\u4EF6\u91CD\u5177\u4F53\u7528\u5230context value\u4E2D\u7684\u90E8\u5206\u5B57\u6BB5\u8FDB\u884C\u6D45\u6BD4\u8F83\uFF0C\u4E00\u6837\u5219\u4E0D\u89E6\u53D1 render</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isShadowEqual</span><span class="token punctuation">(</span>refValue<span class="token punctuation">.</span>selected<span class="token punctuation">,</span> refValue<span class="token punctuation">.</span><span class="token function">selector</span><span class="token punctuation">(</span>nextValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// ignore</span>
        <span class="token punctuation">}</span>
        <span class="token function">forceUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      listeners<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        listeners<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> selected<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u5B9E\u9645\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> CounterContainer <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count1<span class="token punctuation">,</span> setCount1<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count2<span class="token punctuation">,</span> setCount2<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    count1<span class="token punctuation">,</span>
    setCount1<span class="token punctuation">,</span>
    count2<span class="token punctuation">,</span>
    setCount2<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Counter1 <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> setCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span> data<span class="token punctuation">.</span>count1<span class="token punctuation">,</span> <span class="token literal-property property">setCount</span><span class="token operator">:</span> data<span class="token punctuation">.</span>setCount1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> renderCount <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  renderCount<span class="token punctuation">.</span>current <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token constant">ADD1</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>renderCount<span class="token punctuation">.</span>current<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> Counter2 <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> count<span class="token punctuation">,</span> setCount <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSelector</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span> data<span class="token punctuation">.</span>count2<span class="token punctuation">,</span> <span class="token literal-property property">setCount</span><span class="token operator">:</span> data<span class="token punctuation">.</span>setCount2<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount2</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> renderCount <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  renderCount<span class="token punctuation">.</span>current <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>count2<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token constant">ADD2</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>renderCount<span class="token punctuation">.</span>current<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>CounterContainer<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Counter1 <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Counter2 <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>CounterContainer<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div>`,14);function v(C,w){const a=e("ExternalLinkIcon");return o(),c(l,null,[k,s("p",null,[i,s("a",b,[d,p(a)]),m,s("a",f,[g,p(a)])]),y],64)}var _=u(r,[["render",v]]);export{_ as default};
