import{r as t,o,c,a as n,b as e,F as l,d as s,e as p}from"./app.25546b90.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/regex/lastIndex.png",u="/assets/regex/Unicode.png",k="/assets/regex/placement.png",g="/assets/regex/pMatch.png",m="/assets/regex/notCapture.png",d="/assets/regex/numberMatch.png",b="/assets/regex/TagMatch.png",x="/assets/regex/nameMatch.png",h="/assets/regex/moneyRegex.png";const f={},v=n("h1",{id:"\u6D45\u8C08\u6B63\u5219\u8868\u8FBE\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6D45\u8C08\u6B63\u5219\u8868\u8FBE\u5F0F","aria-hidden":"true"},"#"),s(" \u6D45\u8C08\u6B63\u5219\u8868\u8FBE\u5F0F")],-1),_=n("p",null,[s("30\u5206\u949F\u6B63\u5219\u4ECE\u5165\u95E8\u5230"),n("s",null,"\u7CBE\u901A"),s("\uFF0C\u6211\u4E4B\u524D\u4E5F\u5BF9\u6B63\u5219\u671B\u800C\u751F\u754F\uFF0C\u5E73\u65F6\u5DE5\u4F5C\u4E2D\u6216\u591A\u6216\u5C11\u4F1A\u9047\u5230\u6B63\u5219\uFF0C\u4F46\u4E5F\u5C31\u4EC5\u9650\u6216\u591A\u6216\u5C11\u4E86\uFF0C\u5E0C\u671B\u80FD\u548C\u5927\u5BB6\u4E00\u8D77\u6E29\u6545\u800C\u77E5\u65B0")],-1),y=n("h2",{id:"\u5DE5\u5177",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5DE5\u5177","aria-hidden":"true"},"#"),s(" \u5DE5\u5177")],-1),j=n("p",null,"\u53EF\u89C6\u5316",-1),w={href:"https://regexper.com/#",target:"_blank",rel:"noopener noreferrer"},q=s("https://regexper.com/#"),I={href:"https://jex.im/regulex/#!flags=&re=",target:"_blank",rel:"noopener noreferrer"},$=s("https://jex.im/regulex/#!flags=&re="),z={href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"},M=s("https://regex101.com/"),N=n("p",null,"\u6B63\u5219\u5927\u5168",-1),T={href:"https://any86.github.io/any-rule/",target:"_blank",rel:"noopener noreferrer"},B=s("https://any86.github.io/any-rule/"),C=p(`<h2 id="\u8D77\u6B65" tabindex="-1"><a class="header-anchor" href="#\u8D77\u6B65" aria-hidden="true">#</a> \u8D77\u6B65</h2><p>\u57FA\u7840\u626B\u76F2</p><h3 id="\u7279\u6B8A\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7279\u6B8A\u5B57\u7B26" aria-hidden="true">#</a> \u7279\u6B8A\u5B57\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">^</span> <span class="token comment">// \u5339\u914D\u884C\u7684\u5F00\u5934</span>
$ <span class="token comment">// \u5339\u914D\u884C\u7684\u7ED3\u5C3E</span>
<span class="token punctuation">.</span> <span class="token comment">// \u4EFB\u610F\u5B57\u7B26</span>
\\d <span class="token comment">// \u6570\u5B57</span>
\\w <span class="token comment">//[0-9a-Z_]</span>
\\b <span class="token comment">// \u5355\u8BCD\u8FB9\u754C \\w\u4E0E^ $ \\W\u4E4B\u95F4\u7684\u4F4D\u7F6E, \u4E4B\u524D\u8FD9\u90E8\u5206\u4E5F\u6CA1\u7406\u89E3\u6E05\u695Ahello.hi world</span>
<span class="token comment">//\\bhello\\b \\bworld\\b</span>
<span class="token string">&#39;hello world&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">//&#39;bhellob bworldb&#39;</span>
<span class="token comment">//\\bhello\\b.\\bhi\\b \\bworld\\b</span>
<span class="token string">&#39;hello.hi world&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;bhellob.bhib bworldb&#39;</span>
\\s <span class="token comment">// \u7A7A\u683C</span>

\\<span class="token constant">D</span> \\<span class="token constant">W</span> \\<span class="token constant">B</span> \\<span class="token constant">S</span> <span class="token comment">// \u53D6\u53CD</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u8303\u56F4" aria-hidden="true">#</a> \u8303\u56F4</h3><p>[abc] \u8868\u793A &#39;a&#39;\u3001&#39;b&#39;\u3001&#39;c&#39; \u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\uFF0C\u4E5F\u5C31\u662F \u6216 [a-z]\u3001[1-5] \u8868\u793A\u8303\u56F4\uFF0C [0-9a-Z] \u8868\u793A 0-9 \u6216\u8005 a-Z\uFF0C [\\w-] \u8868\u793A \u5B57\u6BCD \u6216 \u8FDE\u5B57\u7B26 - [^abcd] \u8868\u793A\u5339\u914D a\u3001b\u3001c\u3001d \u4EE5\u5916\u7684 \u5B57\u7B26\uFF0C\u8FD9\u79CD\u5199\u6CD5\u7528\u4EE5 \u6392\u9664</p><h3 id="\u91CF\u8BCD" tabindex="-1"><a class="header-anchor" href="#\u91CF\u8BCD" aria-hidden="true">#</a> \u91CF\u8BCD</h3><p>* \u5339\u914D 0~\u221E \u4E2A + \u5339\u914D 1~\u221E \u4E2A ? \u5339\u914D 0 or 1 \u4E2A\uFF0C\u76F8\u5F53\u4E8E {0,1} {n} \u5339\u914D n \u4E2A {n,m} n - m\u4E2A {n,} \u5339\u914D &gt;= n \u4E2A</p><h3 id="lastindex" tabindex="-1"><a class="header-anchor" href="#lastindex" aria-hidden="true">#</a> lastIndex</h3><p><img src="`+i+`" alt="lastIndex"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;01qwer&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span>lastIndex<span class="token punctuation">)</span> <span class="token comment">// 0</span>
reg<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">3</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// fasle</span>
reg<span class="token punctuation">.</span>lastIndex <span class="token comment">// 0</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// true</span>
reg<span class="token punctuation">.</span>lastIndex <span class="token comment">// 1</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">//true</span>
reg<span class="token punctuation">.</span>lastIndex <span class="token comment">// 2</span>
reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">// false</span>
reg<span class="token punctuation">.</span>lastIndex <span class="token comment">// 0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u9970\u7B26" aria-hidden="true">#</a> \u4FEE\u9970\u7B26</h3><p>g \u5168\u5C40\u641C\u7D22</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;hello wolrd hello regex&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span> <span class="token comment">//hi wolrd hi regex</span>

<span class="token string">&#39;hello wolrd hello regex&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span> <span class="token comment">//hi wolrd hello regex</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>i \u5FFD\u7565\u5927\u5C0F\u5199</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;Hello wolrd&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Hello wolrd</span>

<span class="token string">&#39;Hello wolrd&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span> <span class="token comment">// hi world</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>m \u591A\u884C\u5339\u914D <s>\u4E4B\u524D\u6211\u7406\u89E3\u662F\u53EA\u5339\u914D\u7B2C\u4E00\u884C\uFF0C\u7B2C\u4E8C\u884C\u5F00\u59CB\u4E0D\u5339\u914D\u4E86</s> ^ \u6BCF\u884C\u4F1A\u5339\u914D\u4E00\u6B21\u5F00\u5934 $ \u540C\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;play football&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">football</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;basketball&#39;</span><span class="token punctuation">)</span> <span class="token comment">// play basketball</span>
<span class="token string">&#39;play \\nfootball&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">football</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;basketball&#39;</span><span class="token punctuation">)</span> <span class="token comment">// play \\nbasketball</span>

<span class="token string">&#39;play football&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^football</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;basketball&#39;</span><span class="token punctuation">)</span> <span class="token comment">// play football</span>
<span class="token string">&#39;play \\nfootball&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^football</span><span class="token regex-delimiter">/</span><span class="token regex-flags">m</span></span><span class="token punctuation">,</span> <span class="token string">&#39;basketball&#39;</span><span class="token punctuation">)</span> <span class="token comment">// play \\nbasketball</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>u \u4F7F\u7528unicode\u7801\u7684\u6A21\u5F0F\u8FDB\u884C\u5339\u914D</p>`,19),E={href:"https://github.com/xitu/gold-miner/blob/master/TODO/upcoming-regexp-features.md",target:"_blank",rel:"noopener noreferrer"},L=s("https://github.com/xitu/gold-miner/blob/master/TODO/upcoming-regexp-features.md"),U={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes",target:"_blank",rel:"noopener noreferrer"},F=s("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes"),R=p('<p><img src="'+u+`" alt="Unicode"></p><p>s \u5141\u8BB8 . \u5339\u914D\u6362\u884C\u7B26</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">hello .* regex</span><span class="token regex-delimiter">/</span><span class="token regex-flags">m</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello world
 regex</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// false</span>

<span class="token operator">/</span>hello <span class="token punctuation">.</span><span class="token operator">*</span> regex<span class="token operator">/</span>s<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello world
 regex</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,3),O=s("y \u6267\u884C\u201C\u7C98\u6027(sticky)\u201D\u641C\u7D22,\u5339\u914D\u4ECE\u76EE\u6807\u5B57\u7B26\u4E32\u7684\u5F53\u524D\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u5177\u4F53\u53EF\u4EE5\u53C2\u7167 "),P={href:"https://javascript.info/regexp-sticky",target:"_blank",rel:"noopener noreferrer"},S=s("https://javascript.info/regexp-sticky"),V=p(`<p><strong>The flag <code>y</code> makes <code>regexp.exec</code> to search exactly at position <code>lastIndex</code>, not \u201Cstarting from\u201D it.</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;let varName = &quot;value&quot;&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\w+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">y</span></span><span class="token punctuation">;</span>

regexp<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
regexp<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null (there&#39;s a space at position 3, not a word)</span>

regexp<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
regexp<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// varName (word at position 4)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5339\u914D\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D\u4F4D\u7F6E" aria-hidden="true">#</a> \u5339\u914D\u4F4D\u7F6E</h2><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u662F\u5339\u914D\u6A21\u5F0F\uFF0C\u8981\u4E48\u5339\u914D\u5B57\u7B26\uFF0C\u8981\u4E48\u5339\u914D\u4F4D\u7F6E \u5339\u914D\u5B57\u7B26\u5F88\u597D\u7406\u89E3\uFF0C\u90A3\u4EC0\u4E48\u662F\u5339\u914D\u4F4D\u7F6E\uFF0C\u5F88\u591A\u6587\u7AE0\u4F1A\u8FD9\u6837\u4ECB\u7ECD</p><ul><li><p><code>^xx</code> \u8868\u793A\u4EE5 xx \u5F00\u5934</p></li><li><p><code>xx$</code> \u8868\u793A\u4EE5 xx \u7ED3\u5C3E \u5E76\u4E14\u5F88\u591A\u65F6\u5019\u6211\u4EEC\u4E5F\u4F1A\u5199\u51FA\u8FD9\u6837\u7684\u6B63\u5219\u6BD4\u5982<code>/^\\d+$/</code>\uFF0C\u53EF\u662F\u5982\u679C\u8FD9\u6837\u751F\u786C\u7684\u8BB0\u4F4F\u7684\u8BDD\uFF0C\u6709\u4E00\u4E9B\u6B63\u5219\u5C31\u53D8\u5F97\u4E0D\u597D\u7406\u89E3\u4E86</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;zhao\u5927\u5EFA&#39;</span><span class="token punctuation">)</span> <span class="token comment">// zhao\u5927\u5EFAhello world</span>

<span class="token string">&#39;hello world&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?=\\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span> <span class="token comment">// *h*e*l*l*o *w*o*r*l*d</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F4D\u7F6E\u7684\u6982\u5FF5 <code>^ $ \\b \\B (?=) (?!) (?&lt;=) (?&lt;!)</code><img src="`+k+'" alt="placement"></p><p><strong>\u4F46\u5982\u679C\u65AD\u8A00\u540E\u9762\u6709\u8DDF\u5177\u4F53\u7684\u5339\u914D\u5B57\u7B26\uFF0C\u5339\u914D\u7684\u662F\u5B57\u7B26\uFF0C\u800C\u4E0D\u662F\u4F4D\u7F6E\u4E86</strong></p><p><img src="'+g+`" alt="pMatch"></p><h2 id="\u8D2A\u5A6A\u6A21\u5F0F\u548C\u60F0\u6027\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5A6A\u6A21\u5F0F\u548C\u60F0\u6027\u6A21\u5F0F" aria-hidden="true">#</a> \u8D2A\u5A6A\u6A21\u5F0F\u548C\u60F0\u6027\u6A21\u5F0F</h2><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u5728\u5339\u914D\u7684\u65F6\u5019\u9ED8\u8BA4\u4F1A\u5C3D\u53EF\u80FD\u591A\u7684\u5339\u914D\uFF0C\u53EB\u8D2A\u5A6A\u6A21\u5F0F\u3002\u901A\u8FC7\u5728\u9650\u5B9A\u7B26\u540E\u52A0 ?\u53EF\u4EE5\u8FDB\u884C\u975E\u8D2A\u5A6A\u5339\u914D \u6BD4\u5982 \\d{3,6}\u9ED8\u8BA4\u4F1A\u5339\u914D6\u4E2A\u6570\u5B57\u800C\u4E0D\u662F3\u4E2A\uFF0C\u5728\u91CF\u8BCD {}\u540E\u52A0\u4E00\u4E2A ?\u5C31\u53EF\u4EE5\u4FEE\u6539\u6210\u975E\u8D2A\u5A6A\u6A21\u5F0F\uFF0C\u5339\u914D3\u6B21</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">123 456</span><span class="token template-punctuation string">\`</span></span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+ \\d+?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// 123 4</span>
str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+ \\d+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// 123 456</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u65AD\u8A00" aria-hidden="true">#</a> \u65AD\u8A00</h2><blockquote><p>\u5148\u884C\u65F6\u5B57\u7B26\u4E32\u653E\u524D\u9762\uFF0Cpattern \u653E\u540E\u9762\uFF1B\u540E\u884C\u65F6\u5B57\u7B26\u4E32\u653E\u540E\u7AEF\uFF0Cpattern \u653E\u524D\u9762\u3002\u5148\u884C\u5339\u914D\u4EE5\u4EC0\u4E48\u7ED3\u5C3E\uFF0C\u540E\u884C\u5339\u914D\u4EE5\u4EC0\u4E48\u5F00\u5934\uFF0C\u80FD\u5339\u914D\u7684\u662F\u6B63\u5411\uFF0C\u4E0D\u80FD\u5339\u914D\u7684\u662F\u8D1F\u5411\u3002</p></blockquote><h3 id="\u5148\u884C\u6B63\u5411\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5148\u884C\u6B63\u5411\u65AD\u8A00" aria-hidden="true">#</a> \u5148\u884C\u6B63\u5411\u65AD\u8A00</h3><p><code>Positive Lookahead</code> <code>(?=pattern)</code>\xA0\u8868\u793A\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u80FD\u5339\u914D pattern</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Item(?=10)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Item6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Item10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5148\u884C\u8D1F\u5411\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u5148\u884C\u8D1F\u5411\u65AD\u8A00" aria-hidden="true">#</a> \u5148\u884C\u8D1F\u5411\u65AD\u8A00</h3><p><code>Negative Lookahead</code> <code>(?!pattern)</code>\u8868\u793A\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u4E0D\u80FD\u5339\u914D pattern</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Item(?!10)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Item6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Item10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u540E\u884C\u6B63\u5411\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u540E\u884C\u6B63\u5411\u65AD\u8A00" aria-hidden="true">#</a> \u540E\u884C\u6B63\u5411\u65AD\u8A00</h3><p><code>Positive Lookbehind</code> <code>(?&lt;=pattern)</code>\u8868\u793A\u4E4B\u524D\u7684\u5B57\u7B26\u4E32\u80FD\u5339\u914D pattern</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;=10)Item</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;10Item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;6Item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u540E\u884C\u8D1F\u5411\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u540E\u884C\u8D1F\u5411\u65AD\u8A00" aria-hidden="true">#</a> \u540E\u884C\u8D1F\u5411\u65AD\u8A00</h3><p><code>Negative Lookbehind</code> <code>(?!&lt;!pattern)</code>\u8868\u793A\u4E4B\u524D\u7684\u5B57\u7B26\u4E32\u4E0D\u80FD\u5339\u914D pattern</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;!10)Item</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;10Item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;6Item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u6355\u83B7\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u7EC4" aria-hidden="true">#</a> \u6355\u83B7\u7EC4</h2><p>\u4F7F\u7528 ()\uFF0C\u4F5C\u7528\u662F\u63D0\u53D6\u76F8\u5339\u914D\u7684\u5B57\u7B26\u4E32\uFF0C\u4F7F\u91CF\u8BCD\u4F5C\u7528\u4E8E\u5206\u7EC4\u6216\u5B9E\u73B0\u6216\u7684\u6548\u679C</p><h3 id="\u7F16\u53F7\u6355\u83B7\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7F16\u53F7\u6355\u83B7\u7EC4" aria-hidden="true">#</a> \u7F16\u53F7\u6355\u83B7\u7EC4</h3><p>\u540E\u5411\u5F15\u7528\u65F6\u4F7F\u7528\\1 \\2\uFF0C\u53CD\u5411\u5F15\u7528\u4F7F\u7528$1 $2</p><h3 id="\u547D\u540D\u6355\u83B7\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D\u6355\u83B7\u7EC4" aria-hidden="true">#</a> \u547D\u540D\u6355\u83B7\u7EC4</h3><p>\u547D\u540D\u6355\u83B7\u7EC4\u53EF\u4EE5\u7ED9\u6B63\u5219\u6355\u83B7\u7684\u5185\u5BB9\u547D\u540D\uFF0C\u591A\u53D8\u573A\u666F\u4E0B\uFF0C\u5EFA\u8BAE\u4F7F\u7528\uFF0C\u4E0D\u4F1A\u968F\u7740\u7F16\u53F7\u53D8\u5316\u6709\u8C03\u6574\uFF0C\u4E0D\u7528\u6BCF\u6B21\u6709\u5565\u8C03\u6574\u8FD8\u8981\u6570\u62EC\u53F7\uFF0C\u8BED\u6CD5\u662F<code>(?&lt;name&gt;pattern)</code>,\u540E\u5411\u5F15\u7528\u65F6\u4F7F\u7528<code>\\k&lt;nmae&gt;</code>\uFF0C\u53CD\u5411\u5F15\u7528\u4F7F\u7528<code>$&lt;name&gt;</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u975E\u6355\u83B7\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u975E\u6355\u83B7\u7EC4" aria-hidden="true">#</a> \u975E\u6355\u83B7\u7EC4</h3><p>\u975E\u6355\u83B7\u7EC4?:\u4E0D\u9700\u8981\u88AB\u5F15\u7528\u7684\uFF0C \u4EC5\u4EC5\u662F\u4E3A\u4E86\u80FD\u8BA9\u62EC\u53F7\u5185\u7684\u90E8\u5206\u4F5C\u4E3A\u6574\u4F53\uFF0C\u76F8\u6BD4\u6355\u83B7\u7EC4\u4F1A\u6709\u6027\u80FD\u63D0\u5347</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">bytedance is (?:big|rich) company</span><span class="token regex-delimiter">/</span></span> <span class="token comment">//\u6216\u6574\u4F53</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span>big<span class="token punctuation">)</span><span class="token operator">+</span> company<span class="token operator">/</span> <span class="token comment">//\u91CF\u8BCD\u6574\u4F53</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span>big<span class="token operator">|</span>rich<span class="token punctuation">)</span><span class="token operator">+</span> company<span class="token operator">/</span> <span class="token comment">//\u6574\u4F53</span>

<span class="token comment">// \u60F3\u8981\u5B9E\u73B0\u4E00\u81F4\u7684\u8BDD\u5C31\u9700\u8981\u6355\u83B7</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span>big<span class="token operator">|</span>rich<span class="token punctuation">)</span>\\<span class="token number">1</span><span class="token operator">*</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is bigrich company&#39;</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><img src="`+m+`" alt="notCapture"></p><h2 id="\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u5F15\u7528" aria-hidden="true">#</a> \u5F15\u7528</h2><blockquote><p>\u6355\u83B7\u4E86\u5F53\u7136\u662F\u4E3A\u4E86\u5F15\u7528\u7684</p></blockquote><h3 id="\u540E\u5411\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u540E\u5411\u5F15\u7528" aria-hidden="true">#</a> \u540E\u5411\u5F15\u7528</h3><p>\\n \u8868\u793A\u540E\u5411\u5F15\u7528\uFF0C \\1\u662F\u6307\u5728\u6B63\u5219\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u4ECE\u5DE6\u5F80\u53F3\u6570\u7B2C1\u4E2A ()\u4E2D\u7684\u5185\u5BB9\uFF1B\u4EE5\u6B64\u7C7B\u63A8\uFF0C \\2\u8868\u793A\u7B2C2\u4E2A () \u5224\u65AD\u662F\u5426\u6210\u5BF9\u6807\u7B7E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token operator">/</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\1&gt;</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="`+d+`" alt="numberMatch"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;(?&lt;tag&gt;[^&gt;]+)&gt;.*?&lt;\\/\\k&lt;tag&gt;&gt;</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="`+b+'" alt="TagMatch"></p><h3 id="\u53CD\u5411\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5411\u5F15\u7528" aria-hidden="true">#</a> \u53CD\u5411\u5F15\u7528</h3><blockquote><p>\u4F7F\u7528 ()\u540E\u53EF\u4EE5\u4F7F\u7528 $1- $9\u7B49\u6765\u5339\u914D</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;2022-02-01&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{4})-(\\d{2})-(\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">$2-$3,$1</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token comment">// 02-01,2022</span>\n<span class="token string">&#39;2022-02-01&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">$&lt;month&gt;-$&lt;day&gt;,$&lt;year&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> <span class="token comment">// 02-01,2022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u6DF7\u7528" tabindex="-1"><a class="header-anchor" href="#\u6DF7\u7528" aria-hidden="true">#</a> \u6DF7\u7528</h3><blockquote><p>\u5F53\u7F16\u53F7\u548C\u547D\u540D\u6DF7\u7528\u65F6\uFF0C\u7F16\u53F7\u662F\u600E\u4E48\u7B97\u7684</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="'+x+`" alt="nameMatch"></p><h2 id="\u4E00\u4E9B\u5B9E\u6218\u9898" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u5B9E\u6218\u9898" aria-hidden="true">#</a> \u4E00\u4E9B\u5B9E\u6218\u9898</h2><h3 id="\u4E0D\u53EF\u4EE5\u662F\u67D0\u4E2A\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u53EF\u4EE5\u662F\u67D0\u4E2A\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u4E0D\u53EF\u4EE5\u662F\u67D0\u4E2A\u5B57\u7B26\u4E32</h3><p>\u5982\u679C\u6211\u60F3\u8FD9\u4E2A\u5B57\u7B26\u4E32\u4E0D\u5305\u542Byellow\uFF0C\u5929\u771F\u7684\u5199\u4E0B\u4E86<code>/[^yellow]/</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>yellow<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">/</span> \u8868\u793A\u975E yellow \u7684\u4EFB\u610F\u5143\u7D20
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>yellow<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token operator">/</span> \u8868\u793A\u975E yellow \u7684\u4EFB\u610F\u5143\u7D20\u53EF\u4EE5 <span class="token operator">&gt;=</span><span class="token number">0</span> \u6B21\u51FA\u73B0\u3002
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>yellow<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">)</span>$<span class="token operator">/</span> \u8868\u793A\u4ECE\u5934\u81F3\u5C3E\uFF0C\u5FC5\u987B\u975E yellow \u7684\u5143\u7D20\u624D\u80FD <span class="token operator">&gt;=</span> <span class="token number">0</span> \u6B21\u51FA\u73B0\u3002

<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>yellow<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">*</span>$<span class="token operator">/</span>  \u540E\u9762\u4E0D\u80FD\u6709yellow
<span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">!</span>yellow<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>$<span class="token operator">/</span>  \u524D\u9762\u4E0D\u80FD\u6709yellow

<span class="token comment">// \u5339\u914D bytedance is xxx company // xxx\u4E0D\u80FD\u662Fsmall\u6216\u8005poor</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>small<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is small company&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>small<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is big company&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span><span class="token punctuation">(</span>small<span class="token operator">|</span>poor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is poor company&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// smallxxx\u4E0D\u5141\u8BB8\u51FA\u73B0</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>small<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is smallsmall company&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

<span class="token comment">// \u5141\u8BB8smallxxx\u51FA\u73B0</span>
<span class="token operator">/</span>bytedance <span class="token function">is</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>\\bsmall\\b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span> company<span class="token operator">/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;bytedance is smallsmall company&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u6570\u5B57\u7684\u5343\u5206\u4F4D\u5206\u5272\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u7684\u5343\u5206\u4F4D\u5206\u5272\u6CD5" aria-hidden="true">#</a> \u6570\u5B57\u7684\u5343\u5206\u4F4D\u5206\u5272\u6CD5</h3><blockquote><p>123456789 =&gt; 123,456,789 <code>/(?=(?:\\d{3})+$)/g</code>\u53D6\u51FA\u6240\u6709\u9017\u53F7\u7684\u4F4D\u7F6E\uFF0C\u518D\u53BB\u6389\u9996\u4F4D\u7684\u9017\u53F7 <code>\\B</code></p></blockquote><p><img src="`+h+`" alt="moneyRegex"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;123456789&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\B(?=(?:\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123,456,789</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u9A7C\u5CF0\u5316" tabindex="-1"><a class="header-anchor" href="#\u9A7C\u5CF0\u5316" aria-hidden="true">#</a> \u9A7C\u5CF0\u5316</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// -moz-transform =&gt; MozTransform</span>
<span class="token keyword">const</span> <span class="token function-variable function">camelize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[-_\\s]+(\\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> $1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">camelize</span><span class="token punctuation">(</span><span class="token string">&#39;-moz-transform&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// MozTransform</span>

<span class="token comment">// \u66F4\u901A\u7528\u7684\u4E00\u4E2A\u65B9\u6848</span>
<span class="token keyword">const</span> <span class="token function-variable function">camelize1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:\\b|-)(\\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> $1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $1<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">camelize</span><span class="token punctuation">(</span><span class="token string">&#39;router-view&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="matchall" tabindex="-1"><a class="header-anchor" href="#matchall" aria-hidden="true">#</a> MatchAll</h2><blockquote><p>Regex\u7684\u4E00\u4E2A\u65B0\u7279\u6027</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">t(e)(st(\\d?))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;test1test2&#39;</span><span class="token punctuation">;</span>

str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Array [&#39;test1&#39;, &#39;test2&#39;]</span>

<span class="token comment">// \u83B7\u53D6\u5206\u7EC4\u7684\u8BE6\u7EC6\u4FE1\u606F</span>
<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>str<span class="token punctuation">.</span><span class="token function">matchAll</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;test1&#39;, &#39;e&#39;, &#39;st1&#39;, &#39;1&#39;, index: 0, input: &#39;test1test2&#39;, length: 4]</span>
array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;test2&#39;, &#39;e&#39;, &#39;st2&#39;, &#39;2&#39;, index: 5, input: &#39;test1test2&#39;, length: 4]</span>

<span class="token comment">// exec\u65B9\u5F0F</span>
<span class="token keyword">let</span> match<span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>match <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Found </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> start=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>match<span class="token punctuation">.</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> end=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>regexp<span class="token punctuation">.</span>lastIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Found test1 start=0 end=5.</span>
  <span class="token comment">// Found test2 start=5 end=10.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u53C2\u8003\u6587\u7AE0" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u7AE0" aria-hidden="true">#</a> \u53C2\u8003\u6587\u7AE0</h2>`,66),W={href:"https://juejin.cn/post/7021672733213720613",target:"_blank",rel:"noopener noreferrer"},A=s("https://juejin.cn/post/7021672733213720613"),D={href:"https://juejin.cn/post/6844903778408202253",target:"_blank",rel:"noopener noreferrer"},H=s("https://juejin.cn/post/6844903778408202253"),Z={href:"https://juejin.cn/post/7034329725422010375",target:"_blank",rel:"noopener noreferrer"},G=s("https://juejin.cn/post/7034329725422010375");function J(K,Q){const a=t("ExternalLinkIcon");return o(),c(l,null,[v,_,y,n("ul",null,[n("li",null,[j,n("ul",null,[n("li",null,[n("p",null,[n("a",w,[q,e(a)])])]),n("li",null,[n("p",null,[n("a",I,[$,e(a)])])]),n("li",null,[n("p",null,[n("a",z,[M,e(a)])])])])]),n("li",null,[N,n("ul",null,[n("li",null,[n("a",T,[B,e(a)])])])])]),C,n("p",null,[n("a",E,[L,e(a)])]),n("p",null,[n("a",U,[F,e(a)])]),R,n("p",null,[O,n("a",P,[S,e(a)])]),V,n("ul",null,[n("li",null,[n("p",null,[n("a",W,[A,e(a)])])]),n("li",null,[n("p",null,[n("a",D,[H,e(a)])])]),n("li",null,[n("p",null,[n("a",Z,[G,e(a)])])])])],64)}var nn=r(f,[["render",J]]);export{nn as default};
