import{r as t,o as e,c as o,a as s,b as p,F as c,d as n,e as l}from"./app.25546b90.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var r="/assets/redux-saga/loginButton.png",i="/assets/redux-saga/loginFlow.png";const k={},d=s("h1",{id:"\u6D45\u8C08redux-saga\u5BF9\u6D41\u7A0B\u63A7\u5236\u7684\u4F18\u8D8A\u6027",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6D45\u8C08redux-saga\u5BF9\u6D41\u7A0B\u63A7\u5236\u7684\u4F18\u8D8A\u6027","aria-hidden":"true"},"#"),n(" \u6D45\u8C08redux-saga\u5BF9\u6D41\u7A0B\u63A7\u5236\u7684\u4F18\u8D8A\u6027")],-1),b=n("\u7531\u4E8E\u4E4B\u524D\u9879\u76EE\u63A5\u89E6\u5230\u4E86"),m={href:"https://dvajs.com/",target:"_blank",rel:"noopener noreferrer"},g=n("dva"),f=n("\uFF0C\u5176\u5185\u90E8\u96C6\u6210\u4E86"),_={href:"https://redux-saga.js.org/",target:"_blank",rel:"noopener noreferrer"},y=n("redux-saga"),w=n("\uFF0C\u5BF9\u6BD4"),v={href:"https://github.com/reduxjs/redux-thunk",target:"_blank",rel:"noopener noreferrer"},h=n("redux-thunk"),x=n("\u6709\u7740\u6D41\u7A0B\u63A7\u5236\u4E0A\u7684\u4F18\u52BF\uFF0C\u4F46\u540C\u65F6\u4F7F\u7528\u4E0A\u9700\u8981\u5B66\u4E60\u65B0\u7684api,\u4E14\u590D\u6742\u7684\u6D41\u7A0B\u53EF\u80FD\u4F1A\u5E26\u6765\u4E00\u5B9A\u4F7F\u7528\u4E0A\u7684\u5FC3\u667A\u8D1F\u62C5\u3002"),E=l('<p>\u5047\u8BBE\u6211\u4EEC\u6709\u8FD9\u6837\u4E00\u4E2A\u767B\u5F55\u6D41\u7A0B\u573A\u666F\uFF0C\u9875\u9762\u4E0A\u6709\u4FE9\u4E2A\u6309\u94AE\uFF08\u4E00\u4E2A\u767B\u5F55\uFF0C\u4E00\u4E2A\u767B\u51FA\uFF09\uFF0C\u800C\u8BE5\u767B\u5F55\u6709\u51E0\u4E2A\u5173\u952E\u63A7\u5236</p><ul><li>\u767B\u51FA(LOGOUT_REQUEST)\u5FC5\u7136\u8981\u5728\u5BF9\u5E94\u7684\u767B\u5F55(LOGIN_REQUEST)\u4E4B\u540E</li><li>\u7B2C\u4E00\u6B21\u7684\u767B\u5F55\u6D41\u7A0B\u6CA1\u6709\u7ED3\u675F(\u767B\u51FA\u6216\u8005\u767B\u5F55\u5931\u8D25)\u524D\uFF0C\u4E0D\u4F1A\u63A5\u6536\u7B2C\u4E8C\u6B21\u767B\u5F55\u8BF7\u6C42(LOGIN_REQUEST)</li><li>\u70B9\u51FBLogin\uFF0C\u6B64\u65F6\u548C\u540E\u7AEF\u9274\u6743\u662F\u5426\u80FD\u767B\u5F55\u6210\u529F\uFF08\u5047\u8BBE\u63A5\u53E3\u5F88\u6162\uFF09,\u8FD8\u5728\u9274\u6743\u7684\u540C\u65F6\u70B9\u51FBLogout\u9700\u8981\u53D6\u6D88\u6389\u6B63\u5728\u8FDB\u884C\u4E2D\u7684\u9274\u6743</li></ul><p><img src="'+r+'" alt="loginButton"></p><p>\u573A\u666F\u6BD4\u8F83\u6781\u7AEF\uFF0C\u5355\u7EAF\u4E3A\u4E86\u4F8B\u8BC1saga\u5BF9\u6D41\u7A0B\u7684\u63A7\u5236\u6027</p><ul><li>\u767B\u5F55\u548C\u767B\u51FA\u6309\u94AE\u4E0D\u4F1A\u51FA\u73B0\u5728\u540C\u4E00\u4E2A\u9875\u9762\u4E2D\uFF0C\u4E0D\u4F1A\u5B58\u5728\u672A\u767B\u5F55\u5C31\u767B\u51FA\u7684\u64CD\u4F5C</li><li>\u767B\u5F55\u65F6\u4E00\u822C\u4F1A\u6709\u9875\u9762\u7684loading\u6216\u8005\u7981\u7528\u767B\u5F55\u6309\u94AE\u4FDD\u8BC1\u4E0D\u4F1A\u91CD\u590D\u8FDE\u7EED\u4FE9\u6B21\u767B\u5F55</li><li>\u63A5\u53E3\u8BF7\u6C42\u4E00\u822C\u5F88\u5FEB\uFF0C\u4E5F\u4E0D\u9700\u8981\u53D6\u6D88</li></ul><p>\u4F46\u5047\u8BBE\u786E\u5B9E\u5B58\u5728\u8FD9\u4E48\u4E00\u4E2A\u6D41\u7A0B\uFF0C\u4E14\u5BF9\u6309\u94AE\u5B8C\u5168\u4E0D\u505A\u7981\u7528\u548Cloading\u7684\u8499\u5C42\uFF0C\u5982\u679C\u4F7F\u7528redux-thunk\u5F53\u7136\u4E5F\u80FD\u5B9E\u73B0\uFF0C\u4F46\u53EF\u80FD\u4EE3\u7801\u4F1A\u6BD4\u8F83\u96F6\u6563\uFF0C\u5404\u79CD\u5C40\u90E8\u53D8\u91CF\u63A7\u5236\uFF0C\u800C\u4F7F\u7528redux-saga\u5C31\u53EA\u9700\u8981\u4EE5\u4E0B\u76F8\u5173\u4EE3\u7801\uFF0C\u4E14\u76F8\u5173\u7684\u767B\u5F55\u6D41\u7A0B\u64CD\u4F5C\u5168\u90E8\u88AB\u5199\u5728\u4E00\u4E2Asaga\u91CC\uFF0C\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u4F1A\u66F4\u597D</p><p><img src="'+i+`" alt="loginFlow"></p><p>\u9996\u5148\u4E00\u4E2Awhile(true)\u7684\u6B7B\u5FAA\u73AF\u80FD\u4FDD\u8BC1\u767B\u5F55-\u767B\u51FA-\u767B\u5F55-\u767B\u51FA\u8FD9\u6837\u7684\u91CD\u590D\u6D41\u7A0B\u4E8B\u4EF6\u76D1\u542C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>LOGIN_REQUEST\u7684\u4E8B\u4EF6\u63A5\u6536\u5728LOGOUT_REQUEST\u524D\uFF0C\u4F7F\u5F97\u672A\u63A5\u53D7\u8FC7\u767B\u5F55\u8BF7\u6C42\u7684\u672C\u6B21\u6D41\u7A0B\u6C38\u8FDC\u65E0\u6CD5\u89E6\u53D1\u540E\u7EED\u7684\u767B\u51FA\u64CD\u4F5C\uFF0C\u540C\u7406\u767B\u5F55\u6210\u529F\uFF0C\u4F46\u672A\u6709\u767B\u51FA\u64CD\u4F5C\uFF0C\u4F7F\u5F97\u6B7B\u5FAA\u73AF\u7684saga\u6C38\u8FDC\u4F1A\u5361\u5728\u63A5\u6536\u767B\u51FA\u64CD\u4F5C\u8FD9\u4E00\u6B65\uFF0C\u5373\u4F7F\u5916\u90E8\u4F9D\u65E7\u6D3E\u53D1\u4E86\u65B0\u7684\u767B\u5F55\u8BF7\u6C42\u4E5F\u4E0D\u4F1A\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span>username<span class="token punctuation">,</span> password<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token string">&#39;LOGIN_REQUEST&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;LOGOUT_REQUEST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;LOGIN_ERROR&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>generator\u7684\u4E00\u4E9B\u7406\u89E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">generatorFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorCreator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">123</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// &#39;\u5916\u90E8\u7B2C\u4E00\u6B21\u4F20\u5165\u7684\u503C&#39;</span>
    <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">456</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span> <span class="token comment">// &#39;\u5916\u90E8\u7B2C\u4E8C\u6B21\u4F20\u5165\u7684\u503C&#39;</span>
    <span class="token keyword">return</span> <span class="token number">789</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">generatorCreator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> g1 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9047\u5230\u7B2C\u4E00\u4E2Ayield\u963B\u585E\u540E\u7EED\u7684\u4EE3\u7801</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g1<span class="token punctuation">)</span> <span class="token comment">// { value: 123, done: false } \u6B64\u65F6\u963B\u585E\u5728\u4E86yield 123</span>
  <span class="token keyword">const</span> g2 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u5916\u90E8\u7B2C\u4E00\u6B21\u4F20\u5165\u7684\u503C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// next\u4F20\u5165\u503C\u4F5C\u4E3Ares1\uFF0C\u5E76\u7EE7\u7EED\u6267\u884C\u76F4\u5230\u9047\u5230\u7B2C\u4E8C\u4E2Ayield</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g2<span class="token punctuation">)</span> <span class="token comment">// { value: 456, done: false }</span>
  <span class="token keyword">const</span> g3 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u5916\u90E8\u7B2C\u4E8C\u6B21\u4F20\u5165\u7684\u503C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g3<span class="token punctuation">)</span>
  <span class="token keyword">const</span> g4 <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g4<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>generator\u7684\u81EA\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">runGenerator</span><span class="token punctuation">(</span><span class="token parameter">generatorFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> result<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>run<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> run
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">timeout<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5F02\u6B65\u83B7\u53D6\u5230\u7684\u4E00\u4E9B\u6570\u636E&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">123</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">runGenerator</span><span class="token punctuation">(</span>generatorFn<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,15);function j(L,O){const a=t("ExternalLinkIcon");return e(),o(c,null,[d,s("p",null,[b,s("a",m,[g,p(a)]),f,s("a",_,[y,p(a)]),w,s("a",v,[h,p(a)]),x]),E],64)}var G=u(k,[["render",j]]);export{G as default};
